.button {
  border-radius: var(--radius);
  font-weight: var(--font-weight-medium);
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: opacity 0.2s ease-in-out;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Variants
.primary {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  border: 1px solid hsl(var(--primary));

  &:hover:not(:disabled) {
    filter: brightness(0.9);
  }
}

.secondary {
  background-color: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
  border: 1px solid hsl(var(--secondary));

  &:hover:not(:disabled) {
    filter: brightness(0.9);
  }
}

.outline {
  background-color: transparent;
  color: hsl(var(--primary));
  border: 1px solid hsl(var(--primary));

  &:hover:not(:disabled) {
    background-color: hsl(var(--primary) / 0.1);
  }
}

.ghost {
  background-color: transparent;
  color: hsl(var(--primary));
  border: 1px solid transparent;

  &:hover:not(:disabled) {
    background-color: hsl(var(--primary) / 0.1);
  }
}

.link {
  background-color: transparent;
  color: hsl(var(--primary));
  border: 1px solid transparent;
  padding: 0;

  &:hover:not(:disabled) {
    text-decoration: underline;
    text-underline-offset: var(--space-xs);
  }
}

/*
 * Using :where() selector to lower the specificity of these size classes.
 * This ensures that variant styles (primary, secondary, etc.) can easily
 * override these base size styles without requiring !important flags or
 * complex specificity calculations.
 *
 * The :where() pseudo-class has zero specificity, making these size classes
 * easy to override when combined with variant classes.
*/
:where(.sm) {
  font-size: var(--font-size-sm);
  padding: var(--space-xs) var(--space-sm);
}

:where(.md) {
  font-size: var(--font-size-md);
  padding: var(--space-sm) var(--space-md);
}

:where(.lg) {
  font-size: var(--font-size-lg);
  padding: var(--space-sm) var(--space-lg);
}
